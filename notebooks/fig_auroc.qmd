---
title: "Performance plots"
author: "John Curtin & Coco"
date: "`r lubridate::today()`"
output: 
  html_document:
    toc: true 
    toc_depth: 4
format:
  html:
    embed-resources: true
params:
  study: "messages"
  version: "v1"
  cv: "nested_1_x_10_3_x_10"
  algorithms: "xgboost"   # "all" or name of specific algorithm
editor_options: 
  chunk_output_type: console
---

## Code status

Complete for use in GPS study as of 10/2024.

## Notes

Generates auROC plot.

## Set Up


### Study parameters
```{r}
study <- params$study
cv <- params$cv
algorithms <- params$algorithms
version <- params$version
```

### Defaults
```{r}
#| message: false
#| warning: false

# handle conflicts
options(conflicts.policy = "depends.ok")
devtools::source_url("https://github.com/jjcurtin/lab_support/blob/main/fun_ml.R?raw=true")
tidymodels_conflictRules()

knitr::opts_chunk$set(attr.output='style="max-height: 500px;"')

options(tibble.width = Inf)
options(tibble.print_max = Inf)
```

### Packages for script
```{r}
#| message: false
#| warning: false

library(tidyverse)
library(tidyposterior)
library(yardstick)
library(here)

theme_set(theme_classic())

devtools::source_url("https://github.com/jjcurtin/lab_support/blob/main/format_path.R?raw=true")
```


### Absolute paths
```{r}
path_models <- format_path(str_c("studydata/risk/models/", study))
path_messages <- format_path(str_c("studydata/risk/data_processed/messages"))
```


```{r}
probs <- 
  read_rds(here::here(path_models, str_c("inner_preds_", version, "_", cv, ".rds"))) |> 
  glimpse()
```


## Plots

```{r}
#| label: fig-auroc
#| fig-cap: "ROC Curve for the Best Model Configuration"


probs |> 
  roc_curve(prob_raw, truth = label) |> 
  mutate(tp = round(sensitivity, 4),
         fp = round(1 - specificity, 4)) |>
  group_by(tp, fp) |> 
  summarise(.threshold = mean(.threshold)) |> 
  ggplot(aes(x = fp, y = tp, color = .threshold)) +
  geom_path(linewidth = 1) +
  geom_abline(lty = 3) +
  coord_fixed(xlim = c(0, 1), ylim = c(0, 1)) +
  labs(x = "False Positive Rate",
       y = "True Positive Rate") +
  scale_x_continuous(breaks = seq(0,1,.25)) +
  scale_color_gradient(low="blue", high = "red")
```

```{r}
if (file.exists(here::here("_csv/aurocs.csv"))){
  aurocs <- read_csv(here("_csv/aurocs.csv"))
} else{
  aurocs <- probs |> 
    group_by(inner_split_num, outer_split_num) |> 
    summarize(auroc = roc_auc_vec(truth = label, estimate = prob_raw))
  
  aurocs |> write_csv(here("_csv/aurocs.csv"))
}
```

histogram of aurocs
```{r}
#| label: fig-auroc_hist
#| fig-cap: "Distribution of auROCs Across 300 Inner Folds"

aurocs |> 
  ggplot(aes(x = auroc)) +
  geom_histogram(fill = "#97C4C5") +
  geom_vline(xintercept = median(aurocs$auroc), linetype = "dashed", color = "red")
```

## Posterior Distribution

```{r}
if (file.exists(here(path_messages, "pp", "pp_auroc.rds"))){
  pp <- read_rds(here(path_messages, "pp", "pp_auroc.rds"))
} else{
  pp <- auroc |> 
    select(outer_split_num, inner_split_num, auroc) |> 
    rename(id = outer_split_num,
           id2 = inner_split_num) |> 
    perf_mod(formula = statistic ~ 1 + (1 | id/id2),
             # prior_intercept = rstanarm::student_t(autoscale = TRUE),
             # prior = rstanarm::student_t(autoscale = TRUE),
             # transform = tidyposterior::logit_trans,  # for skewed & bounded AUC
             iter = 13000, chains = 4,
             adapt_delta = .99999999,
             # cores = 4, seed = 12345,
             family = gaussian)
  
  pp |> 
    write_rds(here(path_messages, "pp", "pp_auroc.rds"))
}

```

```{r}
#| label: fig-auroc_posterior
#| fig-cap: "Posterior Distribution of auROC Scores"

pp_tidy <- pp |> 
  tidy(seed = 123)

ci <- pp_tidy |> 
  summary() |> 
  mutate(y = 30)

# vertical line for the median
pp_tidy |> 
  ggplot() + 
  geom_density(aes(x = posterior), color = c("#80B1D3"), 
               fill = c("#B3CFE8"), linewidth = .8, alpha = .6) +
  geom_errorbar(data = ci, aes(y = y, xmin = lower, xmax = upper), 
                linewidth = .6, width = 2, color = c("#4292C6")) +
  geom_vline(xintercept = median(pp_tidy$posterior), 
             linetype = "dashed", color = "red") +
  geom_vline(xintercept = .5, 
             linetype = "dotdash", color = "darkgray") +
  ylab("Posterior Probability Density") +
  xlab("Area Under ROC Curve") +
  xlim(.5, 1)
```

