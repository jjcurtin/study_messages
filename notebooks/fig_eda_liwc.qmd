---
title: "EDA on LIWC Features"
author: "Coco Yu"
date: "`r lubridate::today()`"
format: 
  html:
    toc: true 
    toc_depth: 4
    embed-resources: true
editor_options: 
  chunk_output_type: console
---
## Code Status

## Notes

## Setup

Chunk Defaults
```{r}
knitr::opts_chunk$set(attr.output='style="max-height: 500px;"')
```

Conflicts
```{r}
options(conflicts.policy = "depends.ok")
```

```{r}
library(tidyverse)
library(kableExtra, exclude = "group_rows")
library(lubridate)
library(janitor, include.only = c("tabyl", "clean_names"))
library(here, include.only = c("here"))
library(cowplot, exclude = "stamp")

theme_set(theme_classic())
```

Source Functions
```{r}
devtools::source_url("https://github.com/jjcurtin/lab_support/blob/main/format_path.R?raw=true")
devtools::source_url("https://github.com/jjcurtin/lab_support/blob/main/fun_eda.R?raw=true")
```

Absolute Paths 
```{r}
path_messages <- format_path(str_c("studydata/risk/data_processed/messages"))
```

Read in Data
```{r}
stats_ind <- read_csv(here(path_messages, "eda", "eda_liwc_ind.csv")) |> 
  glimpse()

stats_cat <- read_csv(here(path_messages, "eda", "eda_liwc_cat.csv")) |> 
  glimpse()
```

## EDA on indiviudal messages

```{r}
plt1_ind <- plot_grid(
  stats_ind |> 
    filter(!str_detect(skim_variable, "wc|wps|analytic|tone|clout|authentic")) |>
    filter(str_detect(skim_variable, "3day")) |> 
    # filter(numeric.p50 != 0) |> 
    ggplot(aes(x = numeric.p50)) +
    geom_histogram(fill = "#97C4C5", bins = 50) +
    scale_y_continuous(breaks = seq(0, 160, by = 20)) +
    labs(x = "median feature score", y = "counts"),
  stats_ind |> 
    filter(!str_detect(skim_variable, "wc|wps|analytic|tone|clout|authentic")) |>
    filter(str_detect(skim_variable, "3day")) |> 
    ggplot(aes(x = numeric.p100)) +
    geom_histogram(fill = "#97C4C5", bins = 50) +
    scale_y_continuous(breaks = seq(0, 100, by = 20)) +
    labs(x = "max feature score", y = "counts")
)

plt2_ind <- plot_grid(
  stats_ind |> 
    filter(!str_detect(skim_variable, "wc|wps|analytic|tone|clout|authentic")) |>
    filter(str_detect(skim_variable, "1week")) |> 
    # filter(numeric.p50 != 0) |> 
    ggplot(aes(x = numeric.p50)) +
    geom_histogram(fill = "#97C4C5", bins = 50) +
    scale_y_continuous(breaks = seq(0, 160, by = 20)) +
    labs(x = "median feature score", y = "counts"),
  stats_ind |> 
    filter(!str_detect(skim_variable, "wc|wps|analytic|tone|clout|authentic")) |>
    filter(str_detect(skim_variable, "1week")) |> 
    ggplot(aes(x = numeric.p100)) +
    geom_histogram(fill = "#97C4C5", bins = 50) +
    scale_y_continuous(breaks = seq(0, 100, by = 20)) +
    labs(x = "max feature score", y = "counts")
)

```

```{r}
#| label: fig-liwc_ind
#| fig-cap: "Distribution of Engineered Feature Scores (Median or 95% Percentile of Normalized LIWC Score From Individual Messages) Within Each Prediction Window"
plot_grid(plt1_ind +
            draw_label("(a) liwc score distribution in 3-day prediction window",
                       size = 10, x = 0.5, y = -0.03, hjust = 0.5, vjust = 0) +
            theme(plot.margin = margin(t = 0, r = 0, b = 15, l = 0)),
          plt2_ind + 
            draw_label("(b) liwc score distribution in 1-week prediction window",
                       x = 0.5, y = -0.03, hjust = 0.5, vjust = 0, size = 10) +
            theme(plot.margin = margin(t = 0, r = 0, b = 15, l = 0)),
          ncol = 1)
```

## EDA on concatenated messages

```{r}
plt1_cat <- plot_grid(
  stats_cat |> 
    filter(!str_detect(skim_variable, "wc|wps|analytic|tone|clout|authentic")) |>
    filter(str_detect(skim_variable, "raw_3day")) |> 
    # filter(numeric.p50 != 0) |> 
    ggplot(aes(x = numeric.p50)) +
    geom_histogram(fill = "#97C4C5", bins = 50) +
    scale_y_continuous(breaks = seq(0, 50, by = 10)) +
    labs(x = "median feature score", y = "counts"),
  stats_cat |> 
    filter(!str_detect(skim_variable, "wc|wps|analytic|tone|clout|authentic")) |>
    filter(str_detect(skim_variable, "raw_3day")) |> 
    ggplot(aes(x = numeric.p100)) +
    geom_histogram(fill = "#97C4C5", bins = 80) +
    scale_y_continuous(breaks = seq(0, 20, by = 5)) +
    labs(x = "max feature score", y = "counts")
)

plt2_cat <- plot_grid(
  stats_cat |> 
    filter(!str_detect(skim_variable, "wc|wps|analytic|tone|clout|authentic")) |>
    filter(str_detect(skim_variable, "raw_1week")) |> 
    # filter(numeric.p50 != 0) |> 
    ggplot(aes(x = numeric.p50)) +
    geom_histogram(fill = "#97C4C5", bins = 50) +
    scale_y_continuous(breaks = seq(0, 50, by = 10)) +
    labs(x = "median feature score", y = "counts"),
  stats_cat |> 
    filter(!str_detect(skim_variable, "wc|wps|analytic|tone|clout|authentic")) |>
    filter(str_detect(skim_variable, "raw_1week")) |> 
    ggplot(aes(x = numeric.p100)) +
    geom_histogram(fill = "#97C4C5", bins = 80) +
    scale_y_continuous(breaks = seq(0, 20, by = 5)) +
    labs(x = "max feature score", y = "counts")
)
```

```{r}
#| label: fig-liwc_cat_raw
#| fig-cap: "Distribution of Raw LIWC Feature Scores From Concatenated Messages Within Each Prediction Window"
plot_grid(plt1_cat +
            draw_label("(a) feature score distribution in 3-day prediction window",
                       size = 10, x = 0.5, y = -0.03, hjust = 0.5, vjust = 0) +
            theme(plot.margin = margin(t = 0, r = 0, b = 15, l = 0)),
          plt2_cat + 
            draw_label("(b) feature score distribution in 1-week prediction window",
                       x = 0.5, y = -0.03, hjust = 0.5, vjust = 0, size = 10) +
            theme(plot.margin = margin(t = 0, r = 0, b = 15, l = 0)),
          ncol = 1)
```

```{r}
plt3_cat <- plot_grid(
  stats_cat |> 
    filter(!str_detect(skim_variable, "wc|wps|analytic|tone|clout|authentic")) |>
    filter(str_detect(skim_variable, "norm_3day")) |> 
    # filter(numeric.p50 != 0) |> 
    ggplot(aes(x = numeric.p50)) +
    geom_histogram(fill = "#97C4C5", bins = 50) +
    scale_y_continuous(breaks = seq(0, 50, by = 10)) +
    labs(x = "median feature score", y = "counts"),
  stats_cat |> 
    filter(!str_detect(skim_variable, "wc|wps|analytic|tone|clout|authentic")) |>
    filter(str_detect(skim_variable, "norm_3day")) |> 
    ggplot(aes(x = numeric.p100)) +
    geom_histogram(fill = "#97C4C5", bins = 80) +
    scale_y_continuous(breaks = seq(0, 20, by = 5)) +
    labs(x = "max feature score", y = "counts")
)

plt4_cat <- plot_grid(
  stats_cat |> 
    filter(!str_detect(skim_variable, "wc|wps|analytic|tone|clout|authentic")) |>
    filter(str_detect(skim_variable, "norm_1week")) |> 
    # filter(numeric.p50 != 0) |> 
    ggplot(aes(x = numeric.p50)) +
    geom_histogram(fill = "#97C4C5", bins = 50) +
    scale_y_continuous(breaks = seq(0, 50, by = 10)) +
    labs(x = "median feature score", y = "counts"),
  stats_cat |> 
    filter(!str_detect(skim_variable, "wc|wps|analytic|tone|clout|authentic")) |>
    filter(str_detect(skim_variable, "norm_1week")) |> 
    ggplot(aes(x = numeric.p100)) +
    geom_histogram(fill = "#97C4C5", bins = 80) +
    scale_y_continuous(breaks = seq(0, 20, by = 5)) +
    labs(x = "max feature score", y = "counts")
)
```

```{r}
#| label: fig-liwc_cat_norm
#| fig-cap: "Distribution of Normalized LIWC Feature Scores From Concatenated Messages Within Each Prediction Window"
plot_grid(plt3_cat +
            draw_label("(a) feature score distribution in 3-day prediction window",
                       size = 10, x = 0.5, y = -0.03, hjust = 0.5, vjust = 0) +
            theme(plot.margin = margin(t = 0, r = 0, b = 15, l = 0)),
          plt4_cat + 
            draw_label("(b) feature score distribution in 1-week prediction window",
                       x = 0.5, y = -0.03, hjust = 0.5, vjust = 0, size = 10) +
            theme(plot.margin = margin(t = 0, r = 0, b = 15, l = 0)),
          ncol = 1)
```