{
  "hash": "683d67f4f012705bde8e8a127f3fc671",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Performance plots\"\nauthor: \"John Curtin & Coco\"\ndate: \"2024-12-11\"\noutput: \n  html_document:\n    toc: true \n    toc_depth: 4\nformat:\n  html:\n    embed-resources: true\nparams:\n  study: \"messages\"\n  version: \"v1\"\n  cv: \"nested_1_x_10_3_x_10\"\n  algorithms: \"xgboost\"   # \"all\" or name of specific algorithm\neditor_options: \n  chunk_output_type: console\n---\n\n\n\n## Code status\n\nComplete for use in GPS study as of 10/2024.\n\n## Notes\n\nGenerates auROC plot.\n\n## Set Up\n\n\n### Study parameters\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nstudy <- params$study\ncv <- params$cv\nalgorithms <- params$algorithms\nversion <- params$version\n```\n:::\n\n\n\n### Defaults\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n#| message: false\n#| warning: false\n\n# handle conflicts\noptions(conflicts.policy = \"depends.ok\")\ndevtools::source_url(\"https://github.com/jjcurtin/lab_support/blob/main/fun_ml.R?raw=true\")\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nℹ SHA-1 hash of file is \"77e91675366f10788c6bcb59fa1cfc9ee0c75281\"\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n#| message: false\n#| warning: false\n\ntidymodels_conflictRules()\n\nknitr::opts_chunk$set(attr.output='style=\"max-height: 500px;\"')\n\noptions(tibble.width = Inf)\noptions(tibble.print_max = Inf)\n```\n:::\n\n\n\n### Packages for script\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n#| message: false\n#| warning: false\n\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.3     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.3     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n#| message: false\n#| warning: false\n\nlibrary(tidyposterior)\nlibrary(yardstick)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\nAttaching package: 'yardstick'\n\nThe following object is masked from 'package:readr':\n\n    spec\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n#| message: false\n#| warning: false\n\nlibrary(here)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nhere() starts at /Users/yujiachen/Desktop/github/study_messages\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n#| message: false\n#| warning: false\n\ntheme_set(theme_classic())\n\ndevtools::source_url(\"https://github.com/jjcurtin/lab_support/blob/main/format_path.R?raw=true\")\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nℹ SHA-1 hash of file is \"a58e57da996d1b70bb9a5b58241325d6fd78890f\"\n```\n\n\n:::\n:::\n\n\n\n\n### Absolute paths\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\npath_models <- format_path(str_c(\"studydata/risk/models/\", study))\npath_messages <- format_path(str_c(\"studydata/risk/data_processed/messages\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nprobs <- \n  read_rds(here::here(path_models, str_c(\"inner_preds_\", version, \"_\", cv, \".rds\"))) |> \n  glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```{style=\"max-height: 500px;\"}\nRows: 312,174\nColumns: 7\n$ id_obs          <int> 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612,…\n$ outer_split_num <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n$ inner_split_num <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n$ prob_raw        <dbl> 0.5004720, 0.4995192, 0.4995192, 0.5005576, 0.5005382,…\n$ prob_iso        <dbl> 0.07657658, 0.07657658, 0.07657658, 0.07657658, 0.0765…\n$ prob_logi       <dbl> 0.09117982, 0.09939817, 0.09939817, 0.09293282, 0.0923…\n$ label           <fct> no lapse, no lapse, no lapse, no lapse, no lapse, no l…\n```\n\n\n:::\n:::\n\n\n\n\n## Plots\n\n\n\n::: {#cell-fig-auroc .cell}\n\n```{.r .cell-code .hidden}\n#| label: fig-auroc\n#| fig-cap: \"ROC Curve for the Best Model Configuration\"\n\nprobs |> \n  roc_curve(prob_raw, truth = label) |> \n  mutate(tp = round(sensitivity, 4),\n         fp = round(1 - specificity, 4)) |>\n  group_by(tp, fp) |> \n  summarise(.threshold = mean(.threshold)) |> \n  ggplot(aes(x = fp, y = tp, color = .threshold)) +\n  geom_path(linewidth = 1) +\n  geom_abline(lty = 3) +\n  coord_fixed(xlim = c(0, 1), ylim = c(0, 1)) +\n  labs(x = \"False Positive Rate\",\n       y = \"True Positive Rate\") +\n  scale_x_continuous(breaks = seq(0,1,.25)) +\n  scale_color_gradient(low=\"blue\", high = \"red\")\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n`summarise()` has grouped output by 'tp'. You can override using the `.groups`\nargument.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![ROC Curve for the Best Model Configuration](fig_auroc_files/figure-html/fig-auroc-1.png){#fig-auroc width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nif (file.exists(here::here(\"_csv/aurocs.csv\"))){\n  aurocs <- read_csv(here(\"_csv/aurocs.csv\"))\n} else{\n  aurocs <- probs |> \n    group_by(inner_split_num, outer_split_num) |> \n    summarize(auroc = roc_auc_vec(truth = label, estimate = prob_raw))\n  \n  aurocs |> write_csv(here(\"_csv/aurocs.csv\"))\n}\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nRows: 300 Columns: 3\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl (3): inner_split_num, outer_split_num, auroc\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n:::\n\n\n\nhistogram of aurocs\n\n\n::: {#cell-fig-auroc_hist .cell}\n\n```{.r .cell-code .hidden}\n#| label: fig-auroc_hist\n#| fig-cap: \"Distribution of auROCs Across 300 Inner Folds\"\n\naurocs |> \n  ggplot(aes(x = auroc)) +\n  geom_histogram(fill = \"#97C4C5\") +\n  geom_vline(xintercept = median(aurocs$auroc), linetype = \"dashed\", color = \"red\")\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![Distribution of auROCs Across 300 Inner Folds](fig_auroc_files/figure-html/fig-auroc_hist-1.png){#fig-auroc_hist width=672}\n:::\n:::\n\n\n\n## Posterior Distribution\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nif (file.exists(here(path_messages, \"pp\", \"pp_auroc.rds\"))){\n  pp <- read_rds(here(path_messages, \"pp\", \"pp_auroc.rds\"))\n} else{\n  pp <- auroc |> \n    select(outer_split_num, inner_split_num, auroc) |> \n    rename(id = outer_split_num,\n           id2 = inner_split_num) |> \n    perf_mod(formula = statistic ~ 1 + (1 | id/id2),\n             # prior_intercept = rstanarm::student_t(autoscale = TRUE),\n             # prior = rstanarm::student_t(autoscale = TRUE),\n             # transform = tidyposterior::logit_trans,  # for skewed & bounded AUC\n             iter = 13000, chains = 4,\n             adapt_delta = .99999999,\n             # cores = 4, seed = 12345,\n             family = gaussian)\n  \n  pp |> \n    write_rds(here(path_messages, \"pp\", \"pp_auroc.rds\"))\n}\n```\n:::\n\n::: {#cell-fig-auroc_posterior .cell}\n\n```{.r .cell-code .hidden}\n#| label: fig-auroc_posterior\n#| fig-cap: \"Posterior Distribution of auROC Scores\"\n\npp_tidy <- pp |> \n  tidy(seed = 123)\n\nci <- pp_tidy |> \n  summary() |> \n  mutate(y = 30)\n\n# vertical line for the median\npp_tidy |> \n  ggplot() + \n  geom_density(aes(x = posterior), color = c(\"#80B1D3\"), \n               fill = c(\"#B3CFE8\"), linewidth = .8, alpha = .6) +\n  geom_errorbar(data = ci, aes(y = y, xmin = lower, xmax = upper), \n                linewidth = .6, width = 2, color = c(\"#4292C6\")) +\n  geom_vline(xintercept = median(pp_tidy$posterior), \n             linetype = \"dashed\", color = \"red\") +\n  geom_vline(xintercept = .5, \n             linetype = \"dotdash\", color = \"darkgray\") +\n  ylab(\"Posterior Probability Density\") +\n  xlab(\"Area Under ROC Curve\") +\n  xlim(.5, 1)\n```\n\n::: {.cell-output-display}\n![Posterior Distribution of auROC Scores](fig_auroc_files/figure-html/fig-auroc_posterior-1.png){#fig-auroc_posterior width=672}\n:::\n:::\n",
    "supporting": [
      "fig_auroc_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}