{
  "hash": "cc4ee772b50cdbc68e117457d3682c42",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Subgroup Analysis\"\nauthor: \"Coco Yu\"\ndate: \"2024-12-11\"\noutput: \n  html_document:\n    toc: true \n    toc_depth: 4\nformat:\n  html:\n    embed-resources: true\nparams:\n  study: \"messages\"\n  version: \"v1\"\n  cv: \"nested_1_x_10_3_x_10\"\n  algorithms: \"xgboost\"   # \"all\" or name of specific algorithm\neditor_options: \n  chunk_output_type: console\n---\n\n\n\n# Housekeeping\n\n## Code status\n\n## Notes\n\n\n# Set Up\n\n## Set Up Environment\n\n### Study parameters\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nstudy <- params$study\ncv <- params$cv\nalgorithms <- params$algorithms\nversion <- params$version\n```\n:::\n\n\n\n### Defaults\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n#| message: false\n#| warning: false\n\n# handle conflicts\noptions(conflicts.policy = \"depends.ok\")\ndevtools::source_url(\"https://github.com/jjcurtin/lab_support/blob/main/fun_ml.R?raw=true\")\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nℹ SHA-1 hash of file is \"77e91675366f10788c6bcb59fa1cfc9ee0c75281\"\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n#| message: false\n#| warning: false\n\ndevtools::source_url(\"https://github.com/jjcurtin/lab_support/blob/main/fun_eda.R?raw=true\")\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nℹ SHA-1 hash of file is \"c045eee2655a18dc85e715b78182f176327358a7\"\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n#| message: false\n#| warning: false\n\ntidymodels_conflictRules()\n\nknitr::opts_chunk$set(attr.output='style=\"max-height: 500px;\"')\n\noptions(tibble.width = Inf)\noptions(tibble.print_max = Inf)\n```\n:::\n\n\n\n### Packages for script\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n#| message: false\n#| warning: false\n\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.3     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.3     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n#| message: false\n#| warning: false\n\nlibrary(tidyposterior)\nlibrary(tidymodels)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n── Attaching packages ────────────────────────────────────── tidymodels 1.1.1 ──\n✔ broom        1.0.5     ✔ rsample      1.2.0\n✔ dials        1.2.0     ✔ tune         1.1.2\n✔ infer        1.0.5     ✔ workflows    1.1.3\n✔ modeldata    1.2.0     ✔ workflowsets 1.0.1\n✔ parsnip      1.1.1     ✔ yardstick    1.2.0\n✔ recipes      1.0.8     \n── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──\n✖ scales::discard() masks purrr::discard()\n✖ dplyr::filter()   masks stats::filter()\n✖ recipes::fixed()  masks stringr::fixed()\n✖ dplyr::lag()      masks stats::lag()\n✖ yardstick::spec() masks readr::spec()\n✖ recipes::step()   masks stats::step()\n• Use tidymodels_prefer() to resolve common conflicts.\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n#| message: false\n#| warning: false\n\nlibrary(yardstick)\nlibrary(here)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nhere() starts at /Users/yujiachen/Desktop/github/study_messages\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n#| message: false\n#| warning: false\n\ntheme_set(theme_classic())\n\ndevtools::source_url(\"https://github.com/jjcurtin/lab_support/blob/main/format_path.R?raw=true\")\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nℹ SHA-1 hash of file is \"a58e57da996d1b70bb9a5b58241325d6fd78890f\"\n```\n\n\n:::\n:::\n\n\n\n\n### Absolute paths\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\npath_models <- format_path(str_c(\"studydata/risk/models/\", study))\npath_messages <- format_path(str_c(\"studydata/risk/data_processed/messages\"))\npath_shared <- format_path(str_c(\"studydata/risk/data_processed/shared\"))\n```\n:::\n\n\n\n## Data Cleaning\n\nRead in Data\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nprobs <- \n  read_rds(here::here(path_models, str_c(\"inner_preds_\", version, \"_\", cv, \".rds\"))) |> \n  glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```{style=\"max-height: 500px;\"}\nRows: 312,174\nColumns: 7\n$ id_obs          <int> 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612,…\n$ outer_split_num <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n$ inner_split_num <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n$ prob_raw        <dbl> 0.5004720, 0.4995192, 0.4995192, 0.5005576, 0.5005382,…\n$ prob_iso        <dbl> 0.07657658, 0.07657658, 0.07657658, 0.07657658, 0.0765…\n$ prob_logi       <dbl> 0.09117982, 0.09939817, 0.09939817, 0.09293282, 0.0923…\n$ label           <fct> no lapse, no lapse, no lapse, no lapse, no lapse, no l…\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nlabels <- read_csv(here::here(path_messages, \"lapses.csv\"), col_types = cols()) |> \n  mutate(day_start = as_datetime(day_start, tz = \"America/Chicago\"),\n         day_end = as_datetime(day_end, tz = \"America/Chicago\"))\n\nlabels$id_obs <- 1: nrow(labels)\n\nscreen <- read_csv(here::here(path_shared, \"screen.csv\"),\n                   col_types = cols()) |>\n  select(c(starts_with(\"dem\"), subid)) |> \n  glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```{style=\"max-height: 500px;\"}\nRows: 208\nColumns: 16\n$ dem_1   <dbl> 57, 35, 22, 39, 22, 38, 22, 38, 25, 45, 63, 50, 53, 26, 52, 54…\n$ dem_2   <chr> \"Male\", \"Female\", \"Female\", \"Male\", \"Male\", \"Male\", \"Female\", …\n$ dem_3   <chr> \"White/Caucasian\", \"White/Caucasian\", \"White/Caucasian\", \"Whit…\n$ dem_3_1 <chr> NA, NA, NA, NA, NA, NA, NA, NA, \"Filipino and Black\", NA, NA, …\n$ dem_4   <chr> \"No, I am not of Hispanic, Latino, or Spanish origin\", \"No, I …\n$ dem_4_1 <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ dem_5   <chr> \"College degree\", \"2-Year degree\", \"High school or GED\", \"Coll…\n$ dem_6   <chr> \"Unemployed\", \"Employed\", \"Employed\", \"Employed\", \"Employed\", …\n$ dem_6_1 <chr> NA, \"Full-time\", \"Full-time\", \"Full-time\", \"Part-time\", \"Full-…\n$ dem_7   <dbl> 12000, 36920, 20064, 130000, 5000, 70000, 8000, 57000, 10000, …\n$ dem_8   <chr> \"Never Married\", \"Never Married\", \"Never Married\", \"Married\", …\n$ dem2_2  <dbl> 2, 2, 4, 1, 2, 1, 4, 2, 2, 2, 0, 2, 3, 2, 1, 0, 2, 2, 2, 1, 2,…\n$ dem2_4  <dbl> 0, 1, 0, 1, NA, 1, 0, 0, 0, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0…\n$ dem2_6  <dbl> 0, 4, 0, 2, NA, NA, 0, 2, 0, 2, 1, 2, 0, 0, 1, 0, 0, 0, 2, 0, …\n$ dem2_8  <dbl> 0, 0, 0, NA, NA, NA, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ subid   <dbl> 1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 9, 18, 19…\n```\n\n\n:::\n:::\n\n\n\nFind demographic groups\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\ndemographics <- labels |> \n  left_join(screen, by = \"subid\") |> \n  select(-day_start, -day_end, -lapse) |> \n  distinct() |> \n  mutate(\n    race = case_when(\n      dem_3 == \"White/Caucasian\" & grepl(\"No\", dem_4) ~ \"white\",\n      dem_3 != \"White/Caucasian\" | grepl(\"Yes\", dem_4) ~ \"non_white\"),\n    sex = if_else(dem_2 == \"Female\", \"female\", \"male\"),\n    age = if_else(dem_1 >= 55, \"older\", \"younger\"),\n    income = if_else(dem_7 <= .5 * 30000, \"below_poverty\", \"above_poverty\")\n  ) |> \n  select(-starts_with(\"dem\")) |> \n  glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```{style=\"max-height: 500px;\"}\nRows: 11,562\nColumns: 6\n$ subid  <dbl> 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, …\n$ id_obs <int> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, …\n$ race   <chr> \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", …\n$ sex    <chr> \"female\", \"female\", \"female\", \"female\", \"female\", \"female\", \"fe…\n$ age    <chr> \"younger\", \"younger\", \"younger\", \"younger\", \"younger\", \"younger…\n$ income <chr> \"above_poverty\", \"above_poverty\", \"above_poverty\", \"above_pover…\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nprobs <- probs |> \n  left_join(demographics, by = \"id_obs\")\n```\n:::\n\n\n\n### Calculate auROC\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nauroc_all <- probs |> \n  group_by(inner_split_num, outer_split_num) |> \n  summarize(auroc = roc_auc_vec(truth = label, estimate = prob_raw))\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n`summarise()` has grouped output by 'inner_split_num'. You can override using\nthe `.groups` argument.\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nauroc_race <- probs |> \n  group_by(inner_split_num, outer_split_num, race) |> \n  summarize(auroc = roc_auc_vec(truth = label, estimate = prob_raw)) |> \n  ungroup() |> \n  bind_rows(auroc_all |> mutate(race = \"all\")) |> \n  rename(subgroup = race)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: There were 51 warnings in `summarize()`.\nThe first warning was:\nℹ In argument: `auroc = roc_auc_vec(truth = label, estimate = prob_raw)`.\nℹ In group 7: `inner_split_num = 1`, `outer_split_num = 4`, `race =\n  \"non_white\"`.\nCaused by warning:\n! No event observations were detected in `truth` with event level 'lapse'.\nℹ Run `dplyr::last_dplyr_warnings()` to see the 50 remaining warnings.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n`summarise()` has grouped output by 'inner_split_num', 'outer_split_num'. You\ncan override using the `.groups` argument.\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nauroc_sex <- probs |> \n  group_by(inner_split_num, outer_split_num, sex) |> \n  summarize(auroc = roc_auc_vec(truth = label, estimate = prob_raw)) |> \n  ungroup() |> \n  bind_rows(auroc_all |> mutate(sex = \"all\")) |> \n  rename(subgroup = sex)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n`summarise()` has grouped output by 'inner_split_num', 'outer_split_num'. You\ncan override using the `.groups` argument.\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nauroc_age <- probs |> \n  group_by(inner_split_num, outer_split_num, age) |> \n  summarize(auroc = roc_auc_vec(truth = label, estimate = prob_raw)) |>\n  ungroup() |> \n  bind_rows(auroc_all |> mutate(age = \"all\")) |> \n  rename(subgroup = age)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: There were 65 warnings in `summarize()`.\nThe first warning was:\nℹ In argument: `auroc = roc_auc_vec(truth = label, estimate = prob_raw)`.\nℹ In group 7: `inner_split_num = 1`, `outer_split_num = 4`, `age = \"older\"`.\nCaused by warning:\n! No event observations were detected in `truth` with event level 'lapse'.\nℹ Run `dplyr::last_dplyr_warnings()` to see the 64 remaining warnings.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n`summarise()` has grouped output by 'inner_split_num', 'outer_split_num'. You\ncan override using the `.groups` argument.\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nauroc_income <- probs |> \n  group_by(inner_split_num, outer_split_num, income) |> \n  summarize(auroc = roc_auc_vec(truth = label, estimate = prob_raw)) |>\n  ungroup() |> \n  bind_rows(auroc_all |> mutate(income = \"all\")) |> \n  rename(subgroup = income)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: There were 10 warnings in `summarize()`.\nThe first warning was:\nℹ In argument: `auroc = roc_auc_vec(truth = label, estimate = prob_raw)`.\nℹ In group 166: `inner_split_num = 3`, `outer_split_num = 23`, `income =\n  \"below_poverty\"`.\nCaused by warning:\n! No event observations were detected in `truth` with event level 'lapse'.\nℹ Run `dplyr::last_dplyr_warnings()` to see the 9 remaining warnings.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n`summarise()` has grouped output by 'inner_split_num', 'outer_split_num'. You\ncan override using the `.groups` argument.\n```\n\n\n:::\n:::\n\n\n\n## Build Model\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nbayes_model <- function(df){\n  df |> \n    filter(subgroup != \"all\") |>\n    select(c(\"auroc\", \"subgroup\", \"inner_split_num\", \"outer_split_num\")) |> \n    group_by(subgroup) |>\n    mutate(repeat_num = inner_split_num,\n           fold_num = outer_split_num) |> \n    select(c(\"auroc\", \"subgroup\", \"repeat_num\", \"fold_num\")) |>\n    pivot_wider(values_from = c(\"auroc\"), names_from = subgroup) |>\n    rename(id = repeat_num, id2 = fold_num) |>\n    perf_mod(formula = statistic ~ model + (1 | id2/id),\n             # prior_intercept = rstanarm::student_t(autoscale = TRUE),\n             # prior = rstanarm::student_t(autoscale = TRUE),\n             # transform = tidyposterior::logit_trans,  # for skewed & bounded AUC\n             iter = 12000, chains = 4,\n             adapt_delta = .99,\n             # cores = 4, seed = 12345,\n             family = gaussian, verbose = FALSE)\n}\n\nbayes_output <- function(pp){\n  pp |>\n  tidy(seed = 123) |>\n  group_by(model) |> \n  summarize(median = quantile(posterior, probs = .5),\n            lower = quantile(posterior, probs = .025), \n            upper = quantile(posterior, probs = .975))\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nif (file.exists(here(path_messages, \"pp\", \"pp_race.rds\"))){\n  pp_race <- read_rds(here(path_messages, \"pp\", \"pp_race.rds\"))\n} else{\n  pp_race <- bayes_model(auroc_race)\n  pp_race |> write_rds(here(path_messages, \"pp\", \"pp_auroc.rds\"))\n}\n\nif (file.exists(here(path_messages, \"pp\", \"pp_sex.rds\"))){\n  pp_sex <- read_rds(here(path_messages, \"pp\", \"pp_sex.rds\"))\n} else{\n  pp_sex <- bayes_model(auroc_sex)\n  pp_sex |> write_rds(here(path_messages, \"pp\", \"pp_sex.rds\"))\n}\n\nif (file.exists(here(path_messages, \"pp\", \"pp_age.rds\"))){\n  pp_age <- read_rds(here(path_messages, \"pp\", \"pp_age.rds\"))\n} else{\n  pp_age <- bayes_model(auroc_age)\n  pp_age |> write_rds(here(path_messages, \"pp\", \"pp_age.rds\"))\n}\n\nif (file.exists(here(path_messages, \"pp\", \"pp_income.rds\"))){\n  pp_income <- read_rds(here(path_messages, \"pp\", \"pp_income.rds\"))\n} else{\n  pp_income <- bayes_model(auroc_income)\n  pp_income |> write_rds(here(path_messages, \"pp\", \"pp_income.rds\"))\n}\n```\n:::\n\n\n\n## Plot\n\n\n\n::: {#cell-fig-fairness .cell}\n\n```{.r .cell-code .hidden}\n#| label: fig-fairness\n#| fig-cap: \"auROC posterior distribution across different privileged vs. unprivileged groups\"\n\nggpubr::ggarrange(\n  bayes_output(pp_race) |> \n    ggplot(aes(y = factor(model, levels = c(\"non_white\", \"white\")), \n               x = median, color = model)) + \n    geom_point() +\n    geom_errorbar(aes(xmin = lower, xmax = upper), width = .2) +\n    scale_color_manual(values = c(\"#F28072\", \"#B5D66E\")) +\n    labs(x = \"auROC\", y = element_blank(), title = \"Race\") +\n    scale_x_continuous(limits = c(0.46, 0.56), \n                       breaks = seq(0.46, 0.58, by = 0.02)) +\n    theme(legend.position = \"none\"),\n  bayes_output(pp_sex) |> \n    ggplot(aes(y = factor(model, levels = c(\"female\", \"male\")), \n               x = median, color = model)) + \n    geom_point() +\n    geom_errorbar(aes(xmin = lower, xmax = upper), width = .2) +\n    scale_color_manual(values = c(\"#F28072\", \"#B5D66E\")) +\n    labs(x = \"auROC\", y = element_blank(), title = \"Sex\") +\n    scale_x_continuous(limits = c(0.46, 0.56), \n                       breaks = seq(0.46, 0.58, by = 0.02)) +\n    theme(legend.position = \"none\"),\n  bayes_output(pp_age) |> \n    ggplot(aes(y = factor(model, levels = c(\"older\", \"younger\")), \n               x = median, color = model)) + \n    geom_point() +\n    geom_errorbar(aes(xmin = lower, xmax = upper), width = .2) +\n    scale_color_manual(values = c(\"#F28072\", \"#B5D66E\")) +\n    labs(x = \"auROC\", y = element_blank(), title = \"Age\") +\n    scale_x_continuous(limits = c(0.46, 0.56), \n                       breaks = seq(0.46, 0.58, by = 0.02)) +\n    theme(legend.position = \"none\"),\n  bayes_output(pp_income) |> \n    ggplot(aes(y = factor(model, levels = c(\"below_poverty\", \"above_poverty\")), \n               x = median, color = model)) + \n    geom_point() +\n    geom_errorbar(aes(xmin = lower, xmax = upper), width = .2) +\n    scale_color_manual(values = c(\"#B5D66E\", \"#F28072\")) +\n    labs(x = \"auROC\", y = element_blank(), title = \"Income\") +\n    scale_x_continuous(limits = c(0.46, 0.56), \n                       breaks = seq(0.46, 0.58, by = 0.02)) +\n    theme(legend.position = \"none\")\n)\n```\n\n::: {.cell-output-display}\n![auROC posterior distribution across different privileged vs. unprivileged groups](fig_fairness_files/figure-html/fig-fairness-1.png){#fig-fairness width=672}\n:::\n:::\n\n\n\n## Model Comparison\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\npp_race |> \n  contrast_models(\"white\", \"non_white\") |>\n  summarize(\n    median = quantile(difference, probs = .5),\n    lower = quantile(difference, probs = .025), \n    upper = quantile(difference, probs = .975),\n    prob = mean(difference > 0)\n    ) |> \n  mutate(group = \"white vs. non_white\") |> \n  relocate(group) |> \n  bind_rows(\n    pp_sex |> \n      contrast_models(\"male\", \"female\") |>\n      summarize(\n        median = quantile(difference, probs = .5),\n        lower = quantile(difference, probs = .025), \n        upper = quantile(difference, probs = .975),\n        prob = mean(difference > 0)\n        ) |> \n      mutate(group = \"male vs. female\") |> \n      relocate(group)\n  ) |> \n  bind_rows(\n    pp_age |> \n      contrast_models(\"younger\", \"older\") |>\n      summarize(\n        median = quantile(difference, probs = .5),\n        lower = quantile(difference, probs = .025), \n        upper = quantile(difference, probs = .975),\n        prob = mean(difference > 0)\n        ) |> \n      mutate(group = \"younger vs. older\") |> \n      relocate(group)\n  ) |> \n  bind_rows(\n    pp_income |> \n      contrast_models(\"above_poverty\", \"below_poverty\") |>\n      summarize(\n        median = quantile(difference, probs = .5),\n        lower = quantile(difference, probs = .025), \n        upper = quantile(difference, probs = .975),\n        prob = mean(difference > 0)\n        ) |> \n      mutate(group = \"above_poverty vs. below_poverty\") |> \n      relocate(group)\n  ) |> \n  write_csv(here(\"_csv/subgroup_comparison.csv\"))\n```\n:::\n",
    "supporting": [
      "fig_fairness_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}