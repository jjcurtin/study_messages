{
  "hash": "bca10aed7e183839bef4f520830abab4",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"EDA on LIWC Features\"\nauthor: \"Coco Yu\"\ndate: \"2024-12-11\"\nformat: \n  html:\n    toc: true \n    toc_depth: 4\n    embed-resources: true\neditor_options: \n  chunk_output_type: console\n---\n\n\n## Code Status\n\n## Notes\n\n## Setup\n\nChunk Defaults\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nknitr::opts_chunk$set(attr.output='style=\"max-height: 500px;\"')\n```\n:::\n\n\n\nConflicts\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\noptions(conflicts.policy = \"depends.ok\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.3     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.3     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nlibrary(kableExtra, exclude = \"group_rows\")\nlibrary(lubridate)\nlibrary(janitor, include.only = c(\"tabyl\", \"clean_names\"))\nlibrary(here, include.only = c(\"here\"))\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nhere() starts at /Users/yujiachen/Desktop/github/study_messages\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nlibrary(cowplot, exclude = \"stamp\")\n\ntheme_set(theme_classic())\n```\n:::\n\n\n\nSource Functions\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\ndevtools::source_url(\"https://github.com/jjcurtin/lab_support/blob/main/format_path.R?raw=true\")\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nℹ SHA-1 hash of file is \"a58e57da996d1b70bb9a5b58241325d6fd78890f\"\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\ndevtools::source_url(\"https://github.com/jjcurtin/lab_support/blob/main/fun_eda.R?raw=true\")\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nℹ SHA-1 hash of file is \"c045eee2655a18dc85e715b78182f176327358a7\"\n```\n\n\n:::\n:::\n\n\n\nAbsolute Paths \n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\npath_messages <- format_path(str_c(\"studydata/risk/data_processed/messages\"))\n```\n:::\n\n\n\nRead in Data\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nstats_ind <- read_csv(here(path_messages, \"eda\", \"eda_liwc_ind.csv\")) |> \n  glimpse()\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nRows: 468 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (2): skim_type, skim_variable\ndbl (5): complete_rate, numeric.sd, numeric.p0, numeric.p50, numeric.p100\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```{style=\"max-height: 500px;\"}\nRows: 468\nColumns: 7\n$ skim_type     <chr> \"numeric\", \"numeric\", \"numeric\", \"numeric\", \"numeric\", \"…\n$ skim_variable <chr> \"wc_median_3day\", \"wc_q_95_3day\", \"analytic_median_3day\"…\n$ complete_rate <dbl> 0.8808165, 0.8808165, 0.8751081, 0.8751081, 0.8721674, 0…\n$ numeric.sd    <dbl> 5.4263712, 20.3063613, 17.1087023, 19.2376139, 32.722453…\n$ numeric.p0    <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ numeric.p50   <dbl> 7.0000000, 26.4000000, 10.1900000, 97.1955000, 40.060000…\n$ numeric.p100  <dbl> 142.000000, 369.050000, 99.000000, 99.000000, 99.000000,…\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nstats_cat <- read_csv(here(path_messages, \"eda\", \"eda_liwc_cat.csv\")) |> \n  glimpse()\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nRows: 468 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (2): skim_type, skim_variable\ndbl (5): complete_rate, numeric.sd, numeric.p0, numeric.p50, numeric.p100\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```{style=\"max-height: 500px;\"}\nRows: 468\nColumns: 7\n$ skim_type     <chr> \"numeric\", \"numeric\", \"numeric\", \"numeric\", \"numeric\", \"…\n$ skim_variable <chr> \"wc_raw_3day\", \"analytic_raw_3day\", \"clout_raw_3day\", \"a…\n$ complete_rate <dbl> 0.8808165, 0.8751081, 0.8721674, 0.8757135, 0.8599723, 0…\n$ numeric.sd    <dbl> 1175.2249522, 16.9623738, 25.3728003, 22.3378901, 23.279…\n$ numeric.p0    <dbl> 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ numeric.p50   <dbl> 512.000, 19.050, 50.195, 77.130, 82.190, 10.760, 10.680,…\n$ numeric.p100  <dbl> 13211.00, 99.00, 99.00, 99.00, 99.00, 295.00, 100.00, 10…\n```\n\n\n:::\n:::\n\n\n\n## EDA on indiviudal messages\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nplt1_ind <- plot_grid(\n  stats_ind |> \n    filter(!str_detect(skim_variable, \"wc|wps|analytic|tone|clout|authentic\")) |>\n    filter(str_detect(skim_variable, \"3day\")) |> \n    # filter(numeric.p50 != 0) |> \n    ggplot(aes(x = numeric.p50)) +\n    geom_histogram(fill = \"#97C4C5\", bins = 50) +\n    scale_y_continuous(breaks = seq(0, 160, by = 20)) +\n    labs(x = \"median feature score\", y = \"counts\"),\n  stats_ind |> \n    filter(!str_detect(skim_variable, \"wc|wps|analytic|tone|clout|authentic\")) |>\n    filter(str_detect(skim_variable, \"3day\")) |> \n    ggplot(aes(x = numeric.p100)) +\n    geom_histogram(fill = \"#97C4C5\", bins = 50) +\n    scale_y_continuous(breaks = seq(0, 100, by = 20)) +\n    labs(x = \"max feature score\", y = \"counts\")\n)\n\nplt2_ind <- plot_grid(\n  stats_ind |> \n    filter(!str_detect(skim_variable, \"wc|wps|analytic|tone|clout|authentic\")) |>\n    filter(str_detect(skim_variable, \"1week\")) |> \n    # filter(numeric.p50 != 0) |> \n    ggplot(aes(x = numeric.p50)) +\n    geom_histogram(fill = \"#97C4C5\", bins = 50) +\n    scale_y_continuous(breaks = seq(0, 160, by = 20)) +\n    labs(x = \"median feature score\", y = \"counts\"),\n  stats_ind |> \n    filter(!str_detect(skim_variable, \"wc|wps|analytic|tone|clout|authentic\")) |>\n    filter(str_detect(skim_variable, \"1week\")) |> \n    ggplot(aes(x = numeric.p100)) +\n    geom_histogram(fill = \"#97C4C5\", bins = 50) +\n    scale_y_continuous(breaks = seq(0, 100, by = 20)) +\n    labs(x = \"max feature score\", y = \"counts\")\n)\n```\n:::\n\n::: {#cell-fig-liwc_ind .cell}\n\n```{.r .cell-code .hidden}\n#| label: fig-liwc_ind\n#| fig-cap: \"Distribution of Engineered Feature Scores (Median or 95% Percentile of Normalized LIWC Score From Individual Messages) Within Each Prediction Window\"\nplot_grid(plt1_ind +\n            draw_label(\"(a) liwc score distribution in 3-day prediction window\",\n                       size = 10, x = 0.5, y = -0.03, hjust = 0.5, vjust = 0) +\n            theme(plot.margin = margin(t = 0, r = 0, b = 15, l = 0)),\n          plt2_ind + \n            draw_label(\"(b) liwc score distribution in 1-week prediction window\",\n                       x = 0.5, y = -0.03, hjust = 0.5, vjust = 0, size = 10) +\n            theme(plot.margin = margin(t = 0, r = 0, b = 15, l = 0)),\n          ncol = 1)\n```\n\n::: {.cell-output-display}\n![Distribution of Engineered Feature Scores (Median or 95% Percentile of Normalized LIWC Score From Individual Messages) Within Each Prediction Window](fig_eda_liwc_files/figure-html/fig-liwc_ind-1.png){#fig-liwc_ind width=672}\n:::\n:::\n\n\n\n## EDA on concatenated messages\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nplt1_cat <- plot_grid(\n  stats_cat |> \n    filter(!str_detect(skim_variable, \"wc|wps|analytic|tone|clout|authentic\")) |>\n    filter(str_detect(skim_variable, \"raw_3day\")) |> \n    # filter(numeric.p50 != 0) |> \n    ggplot(aes(x = numeric.p50)) +\n    geom_histogram(fill = \"#97C4C5\", bins = 50) +\n    scale_y_continuous(breaks = seq(0, 50, by = 10)) +\n    labs(x = \"median feature score\", y = \"counts\"),\n  stats_cat |> \n    filter(!str_detect(skim_variable, \"wc|wps|analytic|tone|clout|authentic\")) |>\n    filter(str_detect(skim_variable, \"raw_3day\")) |> \n    ggplot(aes(x = numeric.p100)) +\n    geom_histogram(fill = \"#97C4C5\", bins = 80) +\n    scale_y_continuous(breaks = seq(0, 20, by = 5)) +\n    labs(x = \"max feature score\", y = \"counts\")\n)\n\nplt2_cat <- plot_grid(\n  stats_cat |> \n    filter(!str_detect(skim_variable, \"wc|wps|analytic|tone|clout|authentic\")) |>\n    filter(str_detect(skim_variable, \"raw_1week\")) |> \n    # filter(numeric.p50 != 0) |> \n    ggplot(aes(x = numeric.p50)) +\n    geom_histogram(fill = \"#97C4C5\", bins = 50) +\n    scale_y_continuous(breaks = seq(0, 50, by = 10)) +\n    labs(x = \"median feature score\", y = \"counts\"),\n  stats_cat |> \n    filter(!str_detect(skim_variable, \"wc|wps|analytic|tone|clout|authentic\")) |>\n    filter(str_detect(skim_variable, \"raw_1week\")) |> \n    ggplot(aes(x = numeric.p100)) +\n    geom_histogram(fill = \"#97C4C5\", bins = 80) +\n    scale_y_continuous(breaks = seq(0, 20, by = 5)) +\n    labs(x = \"max feature score\", y = \"counts\")\n)\n```\n:::\n\n::: {#cell-fig-liwc_cat_raw .cell}\n\n```{.r .cell-code .hidden}\n#| label: fig-liwc_cat_raw\n#| fig-cap: \"Distribution of Raw LIWC Feature Scores From Concatenated Messages Within Each Prediction Window\"\nplot_grid(plt1_cat +\n            draw_label(\"(a) feature score distribution in 3-day prediction window\",\n                       size = 10, x = 0.5, y = -0.03, hjust = 0.5, vjust = 0) +\n            theme(plot.margin = margin(t = 0, r = 0, b = 15, l = 0)),\n          plt2_cat + \n            draw_label(\"(b) feature score distribution in 1-week prediction window\",\n                       x = 0.5, y = -0.03, hjust = 0.5, vjust = 0, size = 10) +\n            theme(plot.margin = margin(t = 0, r = 0, b = 15, l = 0)),\n          ncol = 1)\n```\n\n::: {.cell-output-display}\n![Distribution of Raw LIWC Feature Scores From Concatenated Messages Within Each Prediction Window](fig_eda_liwc_files/figure-html/fig-liwc_cat_raw-1.png){#fig-liwc_cat_raw width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nplt3_cat <- plot_grid(\n  stats_cat |> \n    filter(!str_detect(skim_variable, \"wc|wps|analytic|tone|clout|authentic\")) |>\n    filter(str_detect(skim_variable, \"norm_3day\")) |> \n    # filter(numeric.p50 != 0) |> \n    ggplot(aes(x = numeric.p50)) +\n    geom_histogram(fill = \"#97C4C5\", bins = 50) +\n    scale_y_continuous(breaks = seq(0, 50, by = 10)) +\n    labs(x = \"median feature score\", y = \"counts\"),\n  stats_cat |> \n    filter(!str_detect(skim_variable, \"wc|wps|analytic|tone|clout|authentic\")) |>\n    filter(str_detect(skim_variable, \"norm_3day\")) |> \n    ggplot(aes(x = numeric.p100)) +\n    geom_histogram(fill = \"#97C4C5\", bins = 80) +\n    scale_y_continuous(breaks = seq(0, 20, by = 5)) +\n    labs(x = \"max feature score\", y = \"counts\")\n)\n\nplt4_cat <- plot_grid(\n  stats_cat |> \n    filter(!str_detect(skim_variable, \"wc|wps|analytic|tone|clout|authentic\")) |>\n    filter(str_detect(skim_variable, \"norm_1week\")) |> \n    # filter(numeric.p50 != 0) |> \n    ggplot(aes(x = numeric.p50)) +\n    geom_histogram(fill = \"#97C4C5\", bins = 50) +\n    scale_y_continuous(breaks = seq(0, 50, by = 10)) +\n    labs(x = \"median feature score\", y = \"counts\"),\n  stats_cat |> \n    filter(!str_detect(skim_variable, \"wc|wps|analytic|tone|clout|authentic\")) |>\n    filter(str_detect(skim_variable, \"norm_1week\")) |> \n    ggplot(aes(x = numeric.p100)) +\n    geom_histogram(fill = \"#97C4C5\", bins = 80) +\n    scale_y_continuous(breaks = seq(0, 20, by = 5)) +\n    labs(x = \"max feature score\", y = \"counts\")\n)\n```\n:::\n\n::: {#cell-fig-liwc_cat_norm .cell}\n\n```{.r .cell-code .hidden}\n#| label: fig-liwc_cat_norm\n#| fig-cap: \"Distribution of Normalized LIWC Feature Scores From Concatenated Messages Within Each Prediction Window\"\nplot_grid(plt3_cat +\n            draw_label(\"(a) feature score distribution in 3-day prediction window\",\n                       size = 10, x = 0.5, y = -0.03, hjust = 0.5, vjust = 0) +\n            theme(plot.margin = margin(t = 0, r = 0, b = 15, l = 0)),\n          plt4_cat + \n            draw_label(\"(b) feature score distribution in 1-week prediction window\",\n                       x = 0.5, y = -0.03, hjust = 0.5, vjust = 0, size = 10) +\n            theme(plot.margin = margin(t = 0, r = 0, b = 15, l = 0)),\n          ncol = 1)\n```\n\n::: {.cell-output-display}\n![Distribution of Normalized LIWC Feature Scores From Concatenated Messages Within Each Prediction Window](fig_eda_liwc_files/figure-html/fig-liwc_cat_norm-1.png){#fig-liwc_cat_norm width=672}\n:::\n:::",
    "supporting": [
      "fig_eda_liwc_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}